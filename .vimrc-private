set nocompatible
set backspace=indent,eol,start

let $PLUG_DIR = expand("~/.vim/bundle")

if empty(glob(expand("$PLUG_DIR/plug.vim")))
    silent !curl -fLo $PLUG_DIR/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source ~/.vimrc
endif
source $PLUG_DIR/plug.vim

" open any file with vim then input :PlugInstall or :PlugUpdate
call plug#begin($PLUG_DIR)
Plug 'altercation/vim-colors-solarized'
Plug 'tomasr/molokai'
Plug 'vim-scripts/phd'
"Plug 'Lokaltog/vim-powerline'
Plug 'vim-airline/vim-airline'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'derekwyatt/vim-fswitch'
Plug 'scrooloose/nerdtree'
Plug 'majutsushi/tagbar'
Plug 'fholgado/minibufexpl.vim'
Plug 'iamcco/markdown-preview.vim'
Plug 'godlygeek/tabular'
Plug 'iamcco/mathjax-support-for-mkdp'
Plug 'plasticboy/vim-markdown'
"Plug 'Valloric/YouCompleteMe'
Plug 'vim-scripts/DoxygenToolkit.vim'
Plug 'zxqfl/tabnine-vim'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'dense-analysis/ale'
Plug 'ludovicchabant/vim-gutentags'
Plug 'skywind3000/gutentags_plus'
Plug 'skywind3000/vim-preview'
if has('nvim') || has('patch-8.0.902')
    Plug 'mhinz/vim-signify'
else
    Plug 'mhinz/vim-signify', { 'branch': 'legacy' }
endif
Plug 'ryanoasis/vim-devicons'
Plug 'skywind3000/asynctasks.vim'
Plug 'skywind3000/asyncrun.vim'
"Plugin 'kshenoy/vim-signature'
"Plugin 'vim-scripts/BOOKMARKS--Mark-and-Highlight-Full-Lines'
"Plugin 'vim-scripts/indexer.tar.gz'
"Plugin 'vim-scripts/DfrankUtil'
"Plugin 'vim-scripts/vimprj'
"Plugin 'dyng/ctrlsf.vim'
"Plugin 'terryma/vim-multiple-cursors'
"Plugin 'scrooloose/nerdcommenter'
"Plugin 'vim-scripts/DrawIt'
"Plugin 'SirVer/ultisnips'
"Plugin 'derekwyatt/vim-protodef'
"Plugin 'gcmt/wildfire.vim'
"Plugin 'sjl/gundo.vim'
"Plugin 'Lokaltog/vim-easymotion'
"Plugin 'suan/vim-instant-markdown'
"Plugin 'lilydjwg/fcitx.vim'
" 插件列表结束
call plug#end()

" 定义快捷键的前缀
let mapleader=";"

" 开启文件类型侦测
filetype on
" 根据侦测到的不同类型加载对应的插件
filetype plugin indent on

" 开启实时搜索功能
set incsearch
" 搜索时大小写不敏感
set ignorecase


" 禁止光标闪烁
"set gcr=a:block-blinkon0
" 禁止显示滚动条
"set guioptions-=l
"set guioptions-=L
"set guioptions-=r
"set guioptions-=R

" 禁止显示菜单和工具条
"set guioptions-=m
"set guioptions-=T


" 显示光标当前位置
set ruler
" 开启行号显示
set number
" 高亮显示当前行/列
set cursorline
set cursorcolumn
" 高亮显示搜索结果
set hlsearch
" viminfo
set viminfo='1000,f1,<500

" 禁止折行
"set nowrap

" 开启语法高亮
syntax enable
" 允许用指定语法高亮配色方案替换默认方案
syntax on

" 自适应不同语言的智能缩进
filetype indent on
" 将制表符扩展为空格
set expandtab
" 设置制表符编辑时占用空格数
set tabstop=4
" 设置格式化时制表符占用空格数
set shiftwidth=4
" 让vim 把连续数量的空格视为一个制表符
set softtabstop=4

" 基于缩进或者语法进行代码折叠
set foldmethod=syntax
"启动vim时关闭折叠
set nofoldenable

" .h 和 .c 文件快速切换
nmap <silent> <Leader>sw : FSHere<cr>


"删除多余空格"
fun RemoveUnwantedSpace()
	let l:winview = winsaveview()
	silent! %s/\s\+$//
	call winrestview(l:winview)
endfun
if has("autocmd")
  au BufWritePre,FileAppendPre,FileWritePre,FilterWritePre * :call RemoveUnwantedSpace()
endif

"回到上次编辑的位置
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

"高亮行尾多余空格
highlight ExtraWhitespace ctermbg=red guibg=darkgreen
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$\| \+\ze\t/


"设定编码
set enc=utf-8
set fileencodings=ucs-bom,utf-8,chinese
set langmenu=zh_CN.UTF-8
"language message zh_CN.UTF-8
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" ctags
" source ~/gitvim/.vimctags

" cscope
" source ~/gitvim/.vimcscope

" gtags
source ~/gitvim/.vimgtags

" minibuf
source ~/gitvim/minibufexpl.vim/.vimrc

" nerdtree
source ~/gitvim/nerdtree/.vimrc

" indent guides
source ~/gitvim/vim-indent-guides/.vimrc

"powerline
source ~/gitvim/vim-powerline/.vimrc

"ycm
" source ~/gitvim/YouCompleteMe/.vimrc

" Astyle
source ~/gitvim/.vimastyle

" create file  header when new file
source ~/gitvim/.vimwhennewfile

" tagbar
source ~/gitvim/tagbar/.vimrc

" taglist
source ~/gitvim/taglist/.vimrc

" doxygen
source ~/gitvim/DoxygenToolkit.vim/.vimrc

" shortkey
"source ~/.vimshortkey
"
source ~/gitvim/markdown-preview.vim/.vimrc

" UltiSips
source ~/gitvim/.vimultisnips

" gutentags
source ~/gitvim/.vimgutentags

" vim-preview
source ~/gitvim/.vimpreview

" vimale
source ~/gitvim/.vimale

" asynctasks
source ~/gitvim/.vimasynctasks
